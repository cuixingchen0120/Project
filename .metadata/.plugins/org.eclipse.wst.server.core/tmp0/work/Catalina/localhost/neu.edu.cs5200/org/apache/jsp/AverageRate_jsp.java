/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.57
 * Generated at: 2014-12-10 05:15:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import neu.edu.cs5200.*;
import java.util.*;

public final class AverageRate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"css/round-about.css\" rel=\"stylesheet\">\r\n");
      out.write("<title>Top10</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Navigation -->\r\n");
      out.write("\t<nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("\t\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\t\tdata-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span> <span\r\n");
      out.write("\t\t\t\t\t\tclass=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("\t\t\t\t\t\tclass=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<a class=\"navbar-brand\"\r\n");
      out.write("\t\t\t\t\thref=\"http://localhost:8080/DotAHOT/dotaHotIndex.jsp\">MTG</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- /.navbar-collapse -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- /.container -->\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");

   	AverageRateDAO dao = new AverageRateDAO();
	 dao.deleteAverageRate();
	AverageRateDAO dao1 = new AverageRateDAO();
	 dao1.CalculateRate();
	AverageRateDAO dao2 = new AverageRateDAO();
	 dao2.Output();
   AverageRateDAO dao3 = new AverageRateDAO();
  	 try {
	dao3.Getinfo();
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<h1>  Top10</h1>\r\n");
      out.write("\t");
      
	AverageRateDAO dao4 = new AverageRateDAO();
	List<AverageRate> averagerates = dao4.Output();
	AverageRateDAO dao5 = new AverageRateDAO();
	List<Card> cards = dao5.Getinfo();

	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");
    
			int n=0;
 while (n<10){

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>\r\n");
      out.write("\t\t\tTop");
      out.print(n+1);
      out.write(":\r\n");
      out.write("\t\t</h2>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t</h5>\r\n");
      out.write("\t\t\t\t<img alt=\"\"\r\n");
      out.write("\t\t\t\t\tsrc=\"http://api.mtgdb.info/content/card_images/");
      out.print(cards.get(n).getId());
      out.write(".jpeg\">\r\n");
      out.write("\t\t\t\t</h5>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"col-md-9\">\r\n");
      out.write("\t\t\t\t<h3>");
      out.print(averagerates.get(n).getCardname());
      out.write("</h3>\r\n");
      out.write("\t\t\t\t\t<h5>");
      out.print( cards.get(n).getType());
      out.write(" \r\n");
      out.write("\t                ");
if(cards.get(n).getSubtype()!=null){ 
	                
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( cards.get(n).getSubtype());
 }
                     else{}
                     
      out.write("\r\n");
      out.write("                    ");
if(cards.get(n).getType().equals("Creature")){
      out.write("\r\n");
      out.write("\t                ");
      out.print(cards.get(n).getPower());
      out.write('/');
      out.print(cards.get(n).getToughness());
}
                     else{}
                     
      out.write("</h5>\r\n");
      out.write("\t\t\t\t<p>");
      out.print( cards.get(n).getDescription());
      out.write("</p>\r\n");
      out.write("\t\t\t\t<p>");
      out.print( cards.get(n).getCardsetname());
      out.write(' ');
      out.write(' ');
      out.write('(');
      out.print( cards.get(n).getRarity());
      out.write(")</p>\r\n");
      out.write("\t\t\t\t<h4>Rate:  ");
      out.print(averagerates.get(n).getAveragerate());
      out.write("</h4>\r\n");
      out.write("\t\t\t\t<h4></h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");

		n = n + 1;
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
